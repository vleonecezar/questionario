{"version":3,"sources":["Form/Radio.js","App.js","index.js"],"names":["Radio","pergunta","options","id","value","onChange","active","map","option","type","checked","perguntas","resposta","App","React","useState","reduce","acc","respostas","setRespostas","slide","setSlide","resultado","setResultado","handleChange","target","onSubmit","event","preventDefault","length","corretas","filter","handleResultado","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAwBeA,EArBD,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,GAAIC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAC7C,OADoE,EAAbC,OAGrD,qCACE,iCAASL,IACRC,EAAQK,KAAI,SAACC,GAAD,OACX,kCACE,uBACEL,GAAIA,EACJM,KAAK,QACLL,MAAOI,EACPE,QAASN,IAAUI,EACnBH,SAAUA,IAEXG,IARSA,SALE,MCAhBG,G,MAAY,CAChB,CACEV,SAAU,wDACVC,QAAS,CACP,wBACA,0BACA,yBAEFU,SAAU,wBACVT,GAAI,MAEN,CACEF,SAAU,yCACVC,QAAS,CACP,sCACA,yBACA,wBAEFU,SAAU,sCACVT,GAAI,MAEN,CACEF,SAAU,gCACVC,QAAS,CAAC,cAAe,aAAc,iBACvCU,SAAU,aACVT,GAAI,MAEN,CACEF,SAAU,yDACVC,QAAS,CAAC,MAAO,MAAO,OACxBU,SAAU,MACVT,GAAI,QA6DOU,EAzDH,WACV,MAAkCC,IAAMC,SACtCJ,EAAUK,QAAO,SAACC,EAAKhB,GACrB,OAAO,2BAAKgB,GAAZ,kBAAkBhB,EAASE,GAAK,OAC/B,KAHL,mBAAOe,EAAP,KAAkBC,EAAlB,KAKA,EAA0BL,IAAMC,SAAS,GAAzC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAkCP,IAAMC,UAAS,GAAjD,mBAAOO,EAAP,KAAkBC,EAAlB,KAGA,SAASC,EAAT,GAAmC,IAAXC,EAAU,EAAVA,OACtBN,EAAa,2BAAKD,GAAN,kBAAkBO,EAAOtB,GAAKsB,EAAOrB,SA8BnD,OACE,uBAAMsB,SA3BR,SAAsBC,GACpBA,EAAMC,iBAOFR,EAAQT,EAAUkB,OAAS,EAC7BR,EAASD,EAAQ,IAEjBC,GAAS,GAMb,WACE,IAAMS,EAAWnB,EAAUoB,QACzB,gBAAGnB,EAAH,EAAGA,SAAUT,EAAb,EAAaA,GAAb,OAAsBe,EAAUf,KAAQS,KAE1CW,EAAa,mBAAD,OACMO,EAASD,OADf,eAC4BlB,EAAUkB,OADtC,iBATVG,KAeF,UACGrB,EAAUJ,KAAI,SAACN,EAAUgC,GAAX,OACb,cAAC,EAAD,aAEE7B,MAAOc,EAAUjB,EAASE,IAC1BE,SAAUmB,EACVlB,OAAQc,IAAUa,GACdhC,GAJCA,EAASE,OAOhBmB,EAAuC,4BAAIA,IAA/B,oDCvFpBY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.27a31bfe.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Radio.css\";\n\nconst Radio = ({ pergunta, options, id, value, onChange, active }) => {\n  if (!active) return null;\n  return (\n    <fieldset>\n      <legend>{pergunta}</legend>\n      {options.map((option) => (\n        <label key={option}>\n          <input\n            id={id}\n            type=\"radio\"\n            value={option}\n            checked={value === option}\n            onChange={onChange}\n          />\n          {option}\n        </label>\n      ))}\n    </fieldset>\n  );\n};\n\nexport default Radio;\n","import React from \"react\";\nimport Radio from \"./Form/Radio\";\nimport \"./App.css\";\n\nconst perguntas = [\n  {\n    pergunta: \"Qual método é utilizado para criar componentes?\",\n    options: [\n      \"React.makeComponent()\",\n      \"React.createComponent()\",\n      \"React.createElement()\",\n    ],\n    resposta: \"React.createElement()\",\n    id: \"p1\",\n  },\n  {\n    pergunta: \"Como importamos um componente externo?\",\n    options: [\n      'import Component from \"./Component\"',\n      'require(\"./Component\")',\n      'import \"./Component\"',\n    ],\n    resposta: 'import Component from \"./Component\"',\n    id: \"p2\",\n  },\n  {\n    pergunta: \"Qual hook não é nativo?\",\n    options: [\"useEffect()\", \"useFetch()\", \"useCallback()\"],\n    resposta: \"useFetch()\",\n    id: \"p3\",\n  },\n  {\n    pergunta: \"Qual palavra deve ser utilizada para criarmos um hook?\",\n    options: [\"set\", \"get\", \"use\"],\n    resposta: \"use\",\n    id: \"p4\",\n  },\n];\n\nconst App = () => {\n  const [respostas, setRespostas] = React.useState(\n    perguntas.reduce((acc, pergunta) => {\n      return { ...acc, [pergunta.id]: \"\" };\n    }, {})\n  );\n  const [slide, setSlide] = React.useState(0);\n  const [resultado, setResultado] = React.useState(false);\n\n  // Atualiza o estado das respostas de acordo com item selecionado\n  function handleChange({ target }) {\n    setRespostas({ ...respostas, [target.id]: target.value });\n  }\n\n  // Previne o envio do form e executa função de slide.\n  function handleSubmit(event) {\n    event.preventDefault();\n    handleSlide();\n  }\n\n  // Atualiza o estado do slide, avançando p/ próxima questão.\n  // esconde as questões, botão e executa função de resultado.\n  function handleSlide() {\n    if (slide < perguntas.length - 1) {\n      setSlide(slide + 1);\n    } else {\n      setSlide(false);\n      handleResultado();\n    }\n  }\n\n  // filtra respostas corretas e exibe resultado na tela final.\n  function handleResultado() {\n    const corretas = perguntas.filter(\n      ({ resposta, id }) => respostas[id] === resposta\n    );\n    setResultado(\n      `Você acertou ${corretas.length} de ${perguntas.length} questões`\n    );\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {perguntas.map((pergunta, index) => (\n        <Radio\n          key={pergunta.id}\n          value={respostas[pergunta.id]}\n          onChange={handleChange}\n          active={slide === index}\n          {...pergunta}\n        />\n      ))}\n      {!resultado ? <button>Próxima</button> : <p>{resultado}</p>}\n    </form>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}